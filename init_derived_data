#!/bin/bash

PATH=./:$PATH
CONFIRM=$1
if [[ $1 != "YES" ]]; then
{
  read -p "Proceeding will drop the current derived data in database osm. Do you really want to continue? " CONFIRM
};
fi

if [[ $CONFIRM != "YES" ]]; then
{
  echo "Aborted on user request"
  exit 0
};
fi


echo "create database if not exists osm;" >init_rules.sql
echo "drop database osm;" >>init_rules.sql
echo "create database osm;" >>init_rules.sql

echo "use osm;" >>init_rules.sql
echo "create table rule_names (id int, name varchar(21844));" >>init_rules.sql
echo "create table rule_bodys (id int, rule int, source varchar(21844));" >>init_rules.sql

echo "insert rule_names values (0, '');" >>init_rules.sql
echo "alter table rule_names add unique key(id), add key(name);" >>init_rules.sql
echo "insert rule_bodys values (0, 0, '');" >>init_rules.sql
echo "alter table rule_bodys add key(id), add key(rule);" >>init_rules.sql

mysql -u osm -posm <init_rules.sql


mysql -u osm -posm -e "create database if not exists osm_1"
mysql -u osm -posm -e "drop database osm_1"
mysql -u osm -posm -e "create database osm_1"

mysql -u osm -posm -e "create database if not exists osm_2"
mysql -u osm -posm -e "drop database osm_2"
mysql -u osm -posm -e "create database osm_2"

echo "drop table if exists key_s, value_s, conflicts, node_conflicts, way_conflicts, relation_conflicts, areas, area_segments, area_tags, area_origins, area_ways;" >init_derived_data.sql

echo "create table key_s (id int unsigned, key_ varchar(21844));" >>init_derived_data.sql
echo "create table value_s (id int unsigned, value_ varchar(21844));" >>init_derived_data.sql

echo "create table conflicts (id int, rule int, line int, stack tinytext, message varchar(21844));" >>init_derived_data.sql
echo "create table node_conflicts (id int, conflict int);" >>init_derived_data.sql
echo "create table way_conflicts (id int, conflict int);" >>init_derived_data.sql
echo "create table relation_conflicts (id int, conflict int);" >>init_derived_data.sql

echo "create table areas (id int unsigned, pivot int unsigned, pivot_type tinyint);" >>init_derived_data.sql
echo "create table area_segments (id int unsigned, ll_idx int unsigned, min_lat int, min_lon int, max_lat int, max_lon int);" >>init_derived_data.sql
echo "create table area_tags (id int unsigned, key_ int unsigned, value_ int unsigned);" >>init_derived_data.sql
echo "create table area_origins (id int unsigned, rule int, line int, stack tinytext);" >>init_derived_data.sql
echo "create table area_ways (id int unsigned, way int);" >>init_derived_data.sql

echo "alter table key_s add unique key(id), add index(key_);" >>init_derived_data.sql
echo "alter table value_s add unique key(id), add index(value_);" >>init_derived_data.sql
echo "insert conflicts values (0, 0, 0, '', '');" >>init_derived_data.sql
echo "alter table conflicts add unique key(id), add index(rule, stack(27));" >>init_derived_data.sql
echo "alter table node_conflicts add key(id);" >>init_derived_data.sql
echo "alter table way_conflicts add key(id);" >>init_derived_data.sql
echo "alter table relation_conflicts add key(id);" >>init_derived_data.sql
echo "insert areas values (0, 0, 0);" >>init_derived_data.sql
echo "alter table areas add unique key(id), add index(pivot, pivot_type);" >>init_derived_data.sql
echo "alter table area_segments add key(id), add index(ll_idx);" >>init_derived_data.sql
echo "alter table area_tags add key(id);" >>init_derived_data.sql
echo "alter table area_origins add index(id), add index(rule, stack(27));" >>init_derived_data.sql
echo "alter table area_ways add index(id);" >>init_derived_data.sql


echo "Creating tables for derived data ... "

mysql -u osm -posm osm_1 <init_derived_data.sql
mysql -u osm -posm osm_2 <init_derived_data.sql
